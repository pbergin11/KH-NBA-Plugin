openapi: 3.0.2
info:
  title: NBA Basketball Knowledge API
  description: This API will get current and historical stats for NBA players and games.
  version: 'v1'
servers:
  - url: https://octopus-app-4yrlx.ondigitalocean.app/
paths:
  /team_ID_by_Name:
    get:
      operationId: getTeamID
      summary: Retrieves teams ID by team name for the current season.
      responses:
        "200":
          description: Successful Response   
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /games:
    get:
      operationId: getGames
      summary: Retrieves all the games for a specific date in the NBA and their associated scores and results. To get stats about a specific player in a game, use the getPlayersStatsByDate operationID.
      parameters:
      - in: query
        name: day
        schema:
            type: string
        description: Filter by day. Provide the day required to find the game information, must be formatted as YYYY-MM-DD.
      - in: query
        name: message
        schema:
            type: string
        description: Required. Pass the users message to the API, this is used to vectorize the message and use sematic search to retrieve information.
      responses:
        "200":
          description: Successful Response   
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /year_standings:
    get:
      operationId: getStandings
      summary: Retrieves the standings in the NBA relative to a specific season. Ensure a year is determined, otherwise the API will return an error.
      parameters:
      - in: query
        name: year
        schema:
            type: integer
        description: Required. Filter by seasons. Seasons are represented by the year they began. For example, 2018 represents season 2018-2019.
      - in: query
        name: message
        schema:
            type: string
        description: Required. Pass the users message to the API, this is used to vectorize the message and use sematic search to retrieve information.
      responses:
        "200":
          description: Successful Response   
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response" 
  /allstar_roster:
    get:
      operationId: getAllstarRosters
      summary: Retrieves the all-star game rosters in the NBA for a specific year.
      parameters:
      - in: query
        name: year
        schema:
            type: integer
        description: Required. Filter by seasons. Seasons are represented by the year they began. For example, 2018 represents season 2018-2019.
      - in: query
        name: message
        schema:
            type: string
        description: Required. Pass the users message to the API, this is used to vectorize the message and use sematic search to retrieve information.
      responses:
        "200":
          description: Successful Response   
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /current_roster_list:
    get:
      operationId: getCurrentRosterList
      summary: Retrieves the current roster and basic information for all players on a specific team. This is specific to only one team per request.
      parameters:
      - in: query
        name: team_abv
        schema:
            type: string
        description: Required. Return the team abreviation for the specific NBA team. For example the brooklyn nets are BKN, the Toronto Raptors are TOR.
      - in: query
        name: message
        schema:
            type: string
        description: Required. Pass the users message to the API, this is used to vectorize the message and use sematic search to retrieve information.
      responses:
        "200":
          description: Successful Response   
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /player_stats_by_date:
    get:
      operationId: getPlayersStatsByDate
      summary: Use this tool if the user asks for a players specific stats on a specific date. It gets stats of a specific player in a game. If no player is returned, assume the player did not play in a game that day. Use the getGames operationID for specific games as a whole.
      parameters:
      - in: query
        name: date
        schema:
            type: string
        description: Required. Filter by day. Provide the day required to find the game information, must be formatted as YYYY-MM-DD.
      - in: query
        name: player_name
        schema:
            type: string
        description: Required. The full name of the player, no short forms or nick names, only full names. For example Steph Curry must be Stephen Curry.
      - in: query
        name: player_id
        schema:
            type: string
        description: Required. The player ID about the specific player in the request information.
      - in: query
        name: message
        schema:
            type: string
        description: Required. Pass the users message to the API, this is used to vectorize the message and use sematic search to retrieve information.
      responses:
        "200":
          description: Successful Response  
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
components:
  schemas:
    Response:
      title: Response
      required:
        - results
      type: object
      properties:
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/QueryResult"
    QueryResult:
      title: QueryResult
      required:
        - date
        - results
      type: object
      properties:
        query:
          title: Query
          type: string
        results:
          title: Results
          type: array


    